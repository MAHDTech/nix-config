# Do not modify this file!  It was generated by 'nixos-generate-config'
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [];

  boot = {
    initrd = {
      availableKernelModules = [
        "ahci"
        "ata_piix"
        "nvme"
        "sd_mod"
        "sr_mod"
        "uhci_hcd"
        "nvme"
        "usb_storage"
        "usbhid"
        "vmw_pvscsi"
      ];

      kernelModules = [];
    };

    kernelModules = [];

    extraModulePackages = [];
  };

  fileSystems = {
    "/" = {
      device = "rpool/nixos/root";
      fsType = "zfs";
      neededForBoot = true;
      options = ["zfsutil" "X-mount.mkdir"];
    };

    "/nix" = {
      device = "rpool/nixos/nix";
      fsType = "zfs";
      neededForBoot = true;
      options = ["zfsutil" "X-mount.mkdir"];
    };

    "/home" = {
      device = "rpool/nixos/home";
      fsType = "zfs";
      neededForBoot = true;
      options = ["zfsutil" "X-mount.mkdir"];
    };

    "/var/lib" = {
      device = "rpool/nixos/var/lib";
      fsType = "zfs";
      neededForBoot = true;
      options = ["zfsutil" "X-mount.mkdir"];
    };

    "/var/log" = {
      device = "rpool/nixos/var/log";
      fsType = "zfs";
      neededForBoot = true;
      options = ["zfsutil" "X-mount.mkdir"];
    };

    "/boot" = {
      device = "bpool/nixos/boot";
      fsType = "zfs";
      neededForBoot = true;
      options = ["zfsutil" "X-mount.mkdir"];
    };

    "/boot/efi" = {
      device = "/dev/disk/by-uuid/E159-D179";
      fsType = "vfat";
      neededForBoot = true;
    };
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp61s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0u1u4u4.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  hardware = {enableRedistributableFirmware = true;};
}
